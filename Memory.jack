// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * Memory operations library.
 */
class Memory {

	static Array memory;
	static Array freeList;
	static int HEAP_BASE;
	static int HEAP_END;

    /** Initializes memory parameters. */
    function void init() {
        let memory = 0;

        let memory[2048] = 14334;
        let memory[2049] = 2050;
		return;
	}

    /** Returns the value of the main memory at the given address. */
    function int peek(int address) {
		return memory[address];
	}

    /** Sets the value of the main memory at this address
     *  to the given value. */
    function void poke(int address, int value) {
		let memory[address] = value;
		return;
	}

    /** finds and allocates from the heap a memory block of the
     *  specified size and returns a reference to its base address. */
    function int alloc(int size) {
        var Array cur;
        let cur = 2048;

        while (cur[0] < size) {
            let cur = cur[1];
        }
        if (cur[0] > (size +2)) {
            let cur[size +2] = cur[0] - size - 2;
            if (cur[1] = (cur+2)) {
                let cur[size+3] = cur + size + 4;
            }
            else {
                let cur[size+3] = cur[1];
            }
            let cur[1] = cur + size + 2;
        }
        let cur[0] = 0;
		return (cur+2);
	}

    /** De-allocates the given object and frees its space. */
    function void deAlloc(int object) {
        var Array cur, prev;
        let cur = object - 2;

        let prev = cur[1];

         if (prev[0] = 0) {
            let cur[0] = cur[1] - cur - 2;
         }
         else {
            let cur[0] = cur[1] - cur + prev[0];
            if (prev[1] = (prev + 2)) {
                let cur[1] = cur + 2;
            }
            else {
                let cur[1] = prev[1];
            }

         }
		 return;
    }
}